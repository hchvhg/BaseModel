#项目访问上下文
server.context-path=/BaseModel

#数据库配置-mysql
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/demo?characterEncoding=utf8
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=admin
#数据库配置-oracle
spring.datasource.driver-class-name:oracle.jdbc.driver.OracleDriver
spring.datasource.url:jdbc:oracle:thin:@10.32.16.1:1521:orcl
spring.datasource.username:bsmodel
spring.datasource.password:bsmodel

#扫描mybatis目录下所有xml文件作为mapper
mybatis.mapper-locations=classpath:mybatis/*.xml

#jpa/hibernate配置
#spring.jpa.database = MYSQL
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update

#日志配置
logging.config=classpath:logback.xml
#配置sql日志
logging.level.com.bsoft.mapper=DEBUG

#redis配置
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=123456
# Redis数据库索引（默认为0）
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000
#spring-session 使用
spring.session.store-type=none

#kafka配置
#kafka-消费者
# kafka服务器地址(可以多个)
spring.kafka.bootstrap-servers=localhost:9092
# 指定一个默认的组名
spring.kafka.consumer.group-id=test-consumer-group
# earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
# latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
# none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
spring.kafka.consumer.auto-offset-reset=earliest
# key/value的反序列化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#kafka-生产者
# 服务器地址
spring.kafka.producer.bootstrap-servers=localhost:9092
# key/value的序列化
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 批量抓取
spring.kafka.producer.batch-size=65536
# 缓存容量
spring.kafka.producer.buffer-memory=524288